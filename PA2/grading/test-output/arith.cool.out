CLASS
ERROR "A"
'{'
OBJECTID var
':'
TYPEID Int
ASSIGN
INT_CONST 0
';'
OBJECTID value
'('
')'
':'
TYPEID Int
'{'
OBJECTID var
'}'
';'
OBJECTID set_var
'('
OBJECTID num
':'
TYPEID Int
')'
':'
TYPEID SELF_TYPE
'{'
'{'
OBJECTID var
ASSIGN
OBJECTID num
';'
OBJECTID self
';'
'}'
'}'
';'
OBJECTID method1
'('
OBJECTID num
':'
TYPEID Int
')'
':'
TYPEID SELF_TYPE
'{'
OBJECTID self
'}'
';'
OBJECTID method2
'('
OBJECTID num1
':'
TYPEID Int
ERROR ","
OBJECTID num2
':'
TYPEID Int
')'
':'
ERROR "B"
'{'
'('
LET
OBJECTID x
':'
TYPEID Int
IN
'{'
OBJECTID x
ASSIGN
OBJECTID num1
'+'
OBJECTID num2
';'
'('
NEW
ERROR "B"
')'
'.'
OBJECTID set_var
'('
OBJECTID x
')'
';'
'}'
')'
'}'
';'
OBJECTID method3
'('
OBJECTID num
':'
TYPEID Int
')'
':'
ERROR "C"
'{'
'('
LET
OBJECTID x
':'
TYPEID Int
IN
'{'
OBJECTID x
ASSIGN
ERROR "~"
OBJECTID num
';'
'('
NEW
ERROR "C"
')'
'.'
OBJECTID set_var
'('
OBJECTID x
')'
';'
'}'
')'
'}'
';'
OBJECTID method4
'('
OBJECTID num1
':'
TYPEID Int
ERROR ","
OBJECTID num2
':'
TYPEID Int
')'
':'
ERROR "D"
'{'
IF
OBJECTID num2
'<'
OBJECTID num1
THEN
'('
LET
OBJECTID x
':'
TYPEID Int
IN
'{'
OBJECTID x
ASSIGN
OBJECTID num1
'-'
OBJECTID num2
';'
'('
NEW
ERROR "D"
')'
'.'
OBJECTID set_var
'('
OBJECTID x
')'
';'
'}'
')'
ELSE
'('
LET
OBJECTID x
':'
TYPEID Int
IN
'{'
OBJECTID x
ASSIGN
OBJECTID num2
'-'
OBJECTID num1
';'
'('
NEW
ERROR "D"
')'
'.'
OBJECTID set_var
'('
OBJECTID x
')'
';'
'}'
')'
FI
'}'
';'
OBJECTID method5
'('
OBJECTID num
':'
TYPEID Int
')'
':'
ERROR "E"
'{'
'('
LET
OBJECTID x
':'
TYPEID Int
ASSIGN
INT_CONST 1
IN
'{'
'('
LET
OBJECTID y
':'
TYPEID Int
ASSIGN
INT_CONST 1
IN
WHILE
OBJECTID y
'<'
ERROR "="
OBJECTID num
LOOP
'{'
OBJECTID x
ASSIGN
OBJECTID x
'*'
OBJECTID y
';'
OBJECTID y
ASSIGN
OBJECTID y
'+'
INT_CONST 1
';'
'}'
POOL
')'
';'
'('
NEW
ERROR "E"
')'
'.'
OBJECTID set_var
'('
OBJECTID x
')'
';'
'}'
')'
'}'
';'
'}'
';'
CLASS
ERROR "B"
INHERITS
ERROR "A"
'{'
OBJECTID method5
'('
OBJECTID num
':'
TYPEID Int
')'
':'
ERROR "E"
'{'
'('
LET
OBJECTID x
':'
TYPEID Int
IN
'{'
OBJECTID x
ASSIGN
OBJECTID num
'*'
OBJECTID num
';'
'('
NEW
ERROR "E"
')'
'.'
OBJECTID set_var
'('
OBJECTID x
')'
';'
'}'
')'
'}'
';'
'}'
';'
CLASS
ERROR "C"
INHERITS
ERROR "B"
'{'
OBJECTID method6
'('
OBJECTID num
':'
TYPEID Int
')'
':'
ERROR "A"
'{'
'('
LET
OBJECTID x
':'
TYPEID Int
IN
'{'
OBJECTID x
ASSIGN
ERROR "~"
OBJECTID num
';'
'('
NEW
ERROR "A"
')'
'.'
OBJECTID set_var
'('
OBJECTID x
')'
';'
'}'
')'
'}'
';'
OBJECTID method5
'('
OBJECTID num
':'
TYPEID Int
')'
':'
ERROR "E"
'{'
'('
LET
OBJECTID x
':'
TYPEID Int
IN
'{'
OBJECTID x
ASSIGN
OBJECTID num
'*'
OBJECTID num
'*'
OBJECTID num
';'
'('
NEW
ERROR "E"
')'
'.'
OBJECTID set_var
'('
OBJECTID x
')'
';'
'}'
')'
'}'
';'
'}'
';'
CLASS
ERROR "D"
INHERITS
ERROR "B"
'{'
OBJECTID method7
'('
OBJECTID num
':'
TYPEID Int
')'
':'
TYPEID Bool
'{'
'('
LET
OBJECTID x
':'
TYPEID Int
ASSIGN
OBJECTID num
IN
IF
OBJECTID x
'<'
INT_CONST 0
THEN
OBJECTID method7
'('
ERROR "~"
OBJECTID x
')'
ELSE
IF
INT_CONST 0
ERROR "="
OBJECTID x
THEN
BOOL_CONST true
ELSE
IF
INT_CONST 1
ERROR "="
OBJECTID x
THEN
BOOL_CONST false
ELSE
IF
INT_CONST 2
ERROR "="
OBJECTID x
THEN
BOOL_CONST false
ELSE
OBJECTID method7
'('
OBJECTID x
'-'
INT_CONST 3
')'
FI
FI
FI
FI
')'
'}'
';'
'}'
';'
CLASS
ERROR "E"
INHERITS
ERROR "D"
'{'
OBJECTID method6
'('
OBJECTID num
':'
TYPEID Int
')'
':'
ERROR "A"
'{'
'('
LET
OBJECTID x
':'
TYPEID Int
IN
'{'
OBJECTID x
ASSIGN
OBJECTID num
'/'
INT_CONST 8
';'
'('
NEW
ERROR "A"
')'
'.'
OBJECTID set_var
'('
OBJECTID x
')'
';'
'}'
')'
'}'
';'
'}'
';'
CLASS
TYPEID A2I
'{'
OBJECTID c2i
'('
OBJECTID char
':'
TYPEID String
')'
':'
TYPEID Int
'{'
IF
OBJECTID char
ERROR "="
STR_CONST "0"
THEN
INT_CONST 0
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "1"
THEN
INT_CONST 1
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "2"
THEN
INT_CONST 2
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "3"
THEN
INT_CONST 3
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "4"
THEN
INT_CONST 4
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "5"
THEN
INT_CONST 5
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "6"
THEN
INT_CONST 6
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "7"
THEN
INT_CONST 7
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "8"
THEN
INT_CONST 8
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "9"
THEN
INT_CONST 9
ELSE
'{'
OBJECTID abort
'('
')'
';'
INT_CONST 0
';'
'}'
FI
FI
FI
FI
FI
FI
FI
FI
FI
FI
'}'
';'
OBJECTID i2c
'('
OBJECTID i
':'
TYPEID Int
')'
':'
TYPEID String
'{'
IF
OBJECTID i
ERROR "="
INT_CONST 0
THEN
STR_CONST "0"
ELSE
IF
OBJECTID i
ERROR "="
INT_CONST 1
THEN
STR_CONST "1"
ELSE
IF
OBJECTID i
ERROR "="
INT_CONST 2
THEN
STR_CONST "2"
ELSE
IF
OBJECTID i
ERROR "="
INT_CONST 3
THEN
STR_CONST "3"
ELSE
IF
OBJECTID i
ERROR "="
INT_CONST 4
THEN
STR_CONST "4"
ELSE
IF
OBJECTID i
ERROR "="
INT_CONST 5
THEN
STR_CONST "5"
ELSE
IF
OBJECTID i
ERROR "="
INT_CONST 6
THEN
STR_CONST "6"
ELSE
IF
OBJECTID i
ERROR "="
INT_CONST 7
THEN
STR_CONST "7"
ELSE
IF
OBJECTID i
ERROR "="
INT_CONST 8
THEN
STR_CONST "8"
ELSE
IF
OBJECTID i
ERROR "="
INT_CONST 9
THEN
STR_CONST "9"
ELSE
'{'
OBJECTID abort
'('
')'
';'
';'
'}'
FI
FI
FI
FI
FI
FI
FI
FI
FI
FI
'}'
';'
OBJECTID a2i
'('
OBJECTID s
':'
TYPEID String
')'
':'
TYPEID Int
'{'
IF
OBJECTID s
'.'
OBJECTID length
'('
')'
ERROR "="
INT_CONST 0
THEN
INT_CONST 0
ELSE
IF
OBJECTID s
'.'
OBJECTID substr
'('
INT_CONST 0
ERROR ","
INT_CONST 1
')'
ERROR "="
STR_CONST "-"
THEN
ERROR "~"
OBJECTID a2i_aux
'('
OBJECTID s
'.'
OBJECTID substr
'('
INT_CONST 1
ERROR ","
OBJECTID s
'.'
OBJECTID length
'('
')'
'-'
INT_CONST 1
')'
')'
ELSE
IF
OBJECTID s
'.'
OBJECTID substr
'('
INT_CONST 0
ERROR ","
INT_CONST 1
')'
ERROR "="
STR_CONST "+"
THEN
OBJECTID a2i_aux
'('
OBJECTID s
'.'
OBJECTID substr
'('
INT_CONST 1
ERROR ","
OBJECTID s
'.'
OBJECTID length
'('
')'
'-'
INT_CONST 1
')'
')'
ELSE
OBJECTID a2i_aux
'('
OBJECTID s
')'
FI
FI
FI
'}'
';'
OBJECTID a2i_aux
'('
OBJECTID s
':'
TYPEID String
')'
':'
TYPEID Int
'{'
'('
LET
OBJECTID int
':'
TYPEID Int
ASSIGN
INT_CONST 0
IN
'{'
'('
LET
OBJECTID j
':'
TYPEID Int
ASSIGN
OBJECTID s
'.'
OBJECTID length
'('
')'
IN
'('
LET
OBJECTID i
':'
TYPEID Int
ASSIGN
INT_CONST 0
IN
WHILE
OBJECTID i
'<'
OBJECTID j
LOOP
'{'
OBJECTID int
ASSIGN
OBJECTID int
'*'
INT_CONST 10
'+'
OBJECTID c2i
'('
OBJECTID s
'.'
OBJECTID substr
'('
OBJECTID i
ERROR ","
INT_CONST 1
')'
')'
';'
OBJECTID i
ASSIGN
OBJECTID i
'+'
INT_CONST 1
';'
'}'
POOL
')'
')'
';'
OBJECTID int
';'
'}'
')'
'}'
';'
OBJECTID i2a
'('
OBJECTID i
':'
TYPEID Int
')'
':'
TYPEID String
'{'
IF
OBJECTID i
ERROR "="
INT_CONST 0
THEN
STR_CONST "0"
ELSE
IF
INT_CONST 0
'<'
OBJECTID i
THEN
OBJECTID i2a_aux
'('
OBJECTID i
')'
ELSE
STR_CONST "-"
'.'
OBJECTID concat
'('
OBJECTID i2a_aux
'('
OBJECTID i
'*'
ERROR "~"
INT_CONST 1
')'
')'
FI
FI
'}'
';'
OBJECTID i2a_aux
'('
OBJECTID i
':'
TYPEID Int
')'
':'
TYPEID String
'{'
IF
OBJECTID i
ERROR "="
INT_CONST 0
THEN
ELSE
'('
LET
OBJECTID next
':'
TYPEID Int
ASSIGN
OBJECTID i
'/'
INT_CONST 10
IN
OBJECTID i2a_aux
'('
OBJECTID next
')'
'.'
OBJECTID concat
'('
OBJECTID i2c
'('
OBJECTID i
'-'
OBJECTID next
'*'
INT_CONST 10
')'
')'
')'
FI
'}'
';'
'}'
';'
CLASS
TYPEID Main
INHERITS
TYPEID IO
'{'
OBJECTID char
':'
TYPEID String
';'
OBJECTID avar
':'
ERROR "A"
';'
OBJECTID a_var
':'
ERROR "A"
';'
OBJECTID flag
':'
TYPEID Bool
ASSIGN
BOOL_CONST true
';'
OBJECTID menu
'('
')'
':'
TYPEID String
'{'
'{'
OBJECTID out_string
'('
STR_CONST "To add a number to "
')'
';'
OBJECTID print
'('
OBJECTID avar
')'
';'
OBJECTID out_string
'('
STR_CONST "...enter a:"
')'
';'
OBJECTID out_string
'('
STR_CONST "To negate "
')'
';'
OBJECTID print
'('
OBJECTID avar
')'
';'
OBJECTID out_string
'('
STR_CONST "...enter b:"
')'
';'
OBJECTID out_string
'('
STR_CONST "To find the difference between "
')'
';'
OBJECTID print
'('
OBJECTID avar
')'
';'
OBJECTID out_string
'('
STR_CONST "and another number...enter c:"
')'
';'
OBJECTID out_string
'('
STR_CONST "To find the factorial of "
')'
';'
OBJECTID print
'('
OBJECTID avar
')'
';'
OBJECTID out_string
'('
STR_CONST "...enter d:"
')'
';'
OBJECTID out_string
'('
STR_CONST "To square "
')'
';'
OBJECTID print
'('
OBJECTID avar
')'
';'
OBJECTID out_string
'('
STR_CONST "...enter e:"
')'
';'
OBJECTID out_string
'('
STR_CONST "To cube "
')'
';'
OBJECTID print
'('
OBJECTID avar
')'
';'
OBJECTID out_string
'('
STR_CONST "...enter f:"
')'
';'
OBJECTID out_string
'('
STR_CONST "To find out if "
')'
';'
OBJECTID print
'('
OBJECTID avar
')'
';'
OBJECTID out_string
'('
STR_CONST "is a multiple of 3...enter g:"
')'
';'
OBJECTID out_string
'('
STR_CONST "To divide "
')'
';'
OBJECTID print
'('
OBJECTID avar
')'
';'
OBJECTID out_string
'('
STR_CONST "by 8...enter h:"
')'
';'
OBJECTID out_string
'('
STR_CONST "To get a new number...enter j:"
')'
';'
OBJECTID out_string
'('
STR_CONST "To quit...enter q:"
')'
';'
OBJECTID in_string
'('
')'
';'
'}'
'}'
';'
OBJECTID prompt
'('
')'
':'
TYPEID String
'{'
'{'
OBJECTID out_string
'('
')'
';'
OBJECTID out_string
'('
STR_CONST "Please enter a number...  "
')'
';'
OBJECTID in_string
'('
')'
';'
'}'
'}'
';'
OBJECTID get_int
'('
')'
':'
TYPEID Int
'{'
'{'
'('
LET
OBJECTID z
':'
TYPEID A2I
ASSIGN
NEW
TYPEID A2I
IN
'('
LET
OBJECTID s
':'
TYPEID String
ASSIGN
OBJECTID prompt
'('
')'
IN
OBJECTID z
'.'
OBJECTID a2i
'('
OBJECTID s
')'
')'
')'
';'
'}'
'}'
';'
OBJECTID is_even
'('
OBJECTID num
':'
TYPEID Int
')'
':'
TYPEID Bool
'{'
'('
LET
OBJECTID x
':'
TYPEID Int
ASSIGN
OBJECTID num
IN
IF
OBJECTID x
'<'
INT_CONST 0
THEN
OBJECTID is_even
'('
ERROR "~"
OBJECTID x
')'
ELSE
IF
INT_CONST 0
ERROR "="
OBJECTID x
THEN
BOOL_CONST true
ELSE
IF
INT_CONST 1
ERROR "="
OBJECTID x
THEN
BOOL_CONST false
ELSE
OBJECTID is_even
'('
OBJECTID x
'-'
INT_CONST 2
')'
FI
FI
FI
')'
'}'
';'
OBJECTID class_type
'('
OBJECTID var
':'
ERROR "A"
')'
':'
TYPEID SELF_TYPE
'{'
CASE
OBJECTID var
OF
OBJECTID a
':'
ERROR "A"
DARROW
OBJECTID out_string
'('
STR_CONST "Class type is now A"
')'
';'
OBJECTID b
':'
ERROR "B"
DARROW
OBJECTID out_string
'('
STR_CONST "Class type is now B"
')'
';'
OBJECTID c
':'
ERROR "C"
DARROW
OBJECTID out_string
'('
STR_CONST "Class type is now C"
')'
';'
OBJECTID d
':'
ERROR "D"
DARROW
OBJECTID out_string
'('
STR_CONST "Class type is now D"
')'
';'
OBJECTID e
':'
ERROR "E"
DARROW
OBJECTID out_string
'('
STR_CONST "Class type is now E"
')'
';'
OBJECTID o
':'
TYPEID Object
DARROW
OBJECTID out_string
'('
STR_CONST "Oooops"
')'
';'
ESAC
'}'
';'
OBJECTID print
'('
OBJECTID var
':'
ERROR "A"
')'
':'
TYPEID SELF_TYPE
'{'
'('
LET
OBJECTID z
':'
TYPEID A2I
ASSIGN
NEW
TYPEID A2I
IN
'{'
OBJECTID out_string
'('
OBJECTID z
'.'
OBJECTID i2a
'('
OBJECTID var
'.'
OBJECTID value
'('
')'
')'
')'
';'
OBJECTID out_string
'('
STR_CONST " "
')'
';'
'}'
')'
'}'
';'
OBJECTID main
'('
')'
':'
TYPEID Object
'{'
'{'
OBJECTID avar
ASSIGN
'('
NEW
ERROR "A"
')'
';'
WHILE
OBJECTID flag
LOOP
'{'
OBJECTID out_string
'('
STR_CONST "number "
')'
';'
OBJECTID print
'('
OBJECTID avar
')'
';'
IF
OBJECTID is_even
'('
OBJECTID avar
'.'
OBJECTID value
'('
')'
')'
THEN
OBJECTID out_string
'('
STR_CONST "is even!"
')'
ELSE
OBJECTID out_string
'('
STR_CONST "is odd!"
')'
FI
';'
OBJECTID class_type
'('
OBJECTID avar
')'
';'
OBJECTID char
ASSIGN
OBJECTID menu
'('
')'
';'
IF
OBJECTID char
ERROR "="
STR_CONST "a"
THEN
'{'
OBJECTID a_var
ASSIGN
'('
NEW
ERROR "A"
')'
'.'
OBJECTID set_var
'('
OBJECTID get_int
'('
')'
')'
';'
OBJECTID avar
ASSIGN
'('
NEW
ERROR "B"
')'
'.'
OBJECTID method2
'('
OBJECTID avar
'.'
OBJECTID value
'('
')'
ERROR ","
OBJECTID a_var
'.'
OBJECTID value
'('
')'
')'
';'
'}'
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "b"
THEN
CASE
OBJECTID avar
OF
OBJECTID c
':'
ERROR "C"
DARROW
OBJECTID avar
ASSIGN
OBJECTID c
'.'
OBJECTID method6
'('
OBJECTID c
'.'
OBJECTID value
'('
')'
')'
';'
OBJECTID a
':'
ERROR "A"
DARROW
OBJECTID avar
ASSIGN
OBJECTID a
'.'
OBJECTID method3
'('
OBJECTID a
'.'
OBJECTID value
'('
')'
')'
';'
OBJECTID o
':'
TYPEID Object
DARROW
'{'
OBJECTID out_string
'('
STR_CONST "Oooops"
')'
';'
OBJECTID abort
'('
')'
';'
INT_CONST 0
';'
'}'
';'
ESAC
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "c"
THEN
'{'
OBJECTID a_var
ASSIGN
'('
NEW
ERROR "A"
')'
'.'
OBJECTID set_var
'('
OBJECTID get_int
'('
')'
')'
';'
OBJECTID avar
ASSIGN
'('
NEW
ERROR "D"
')'
'.'
OBJECTID method4
'('
OBJECTID avar
'.'
OBJECTID value
'('
')'
ERROR ","
OBJECTID a_var
'.'
OBJECTID value
'('
')'
')'
';'
'}'
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "d"
THEN
OBJECTID avar
ASSIGN
'('
NEW
ERROR "C"
')'
ERROR "@"
ERROR "A"
'.'
OBJECTID method5
'('
OBJECTID avar
'.'
OBJECTID value
'('
')'
')'
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "e"
THEN
OBJECTID avar
ASSIGN
'('
NEW
ERROR "C"
')'
ERROR "@"
ERROR "B"
'.'
OBJECTID method5
'('
OBJECTID avar
'.'
OBJECTID value
'('
')'
')'
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "f"
THEN
OBJECTID avar
ASSIGN
'('
NEW
ERROR "C"
')'
ERROR "@"
ERROR "C"
'.'
OBJECTID method5
'('
OBJECTID avar
'.'
OBJECTID value
'('
')'
')'
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "g"
THEN
IF
'('
'('
NEW
ERROR "D"
')'
'.'
OBJECTID method7
'('
OBJECTID avar
'.'
OBJECTID value
'('
')'
')'
')'
THEN
'{'
OBJECTID out_string
'('
STR_CONST "number "
')'
';'
OBJECTID print
'('
OBJECTID avar
')'
';'
OBJECTID out_string
'('
STR_CONST "is divisible by 3."
')'
';'
'}'
ELSE
'{'
OBJECTID out_string
'('
STR_CONST "number "
')'
';'
OBJECTID print
'('
OBJECTID avar
')'
';'
OBJECTID out_string
'('
STR_CONST "is not divisible by 3."
')'
';'
'}'
FI
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "h"
THEN
'('
LET
OBJECTID x
':'
ERROR "A"
IN
'{'
OBJECTID x
ASSIGN
'('
NEW
ERROR "E"
')'
'.'
OBJECTID method6
'('
OBJECTID avar
'.'
OBJECTID value
'('
')'
')'
';'
'('
LET
OBJECTID r
':'
TYPEID Int
ASSIGN
'('
OBJECTID avar
'.'
OBJECTID value
'('
')'
'-'
'('
OBJECTID x
'.'
OBJECTID value
'('
')'
'*'
INT_CONST 8
')'
')'
IN
'{'
OBJECTID out_string
'('
STR_CONST "number "
')'
';'
OBJECTID print
'('
OBJECTID avar
')'
';'
OBJECTID out_string
'('
STR_CONST "is equal to "
')'
';'
OBJECTID print
'('
OBJECTID x
')'
';'
OBJECTID out_string
'('
STR_CONST "times 8 with a remainder of "
')'
';'
'('
LET
OBJECTID a
':'
TYPEID A2I
ASSIGN
NEW
TYPEID A2I
IN
'{'
OBJECTID out_string
'('
OBJECTID a
'.'
OBJECTID i2a
'('
OBJECTID r
')'
')'
';'
OBJECTID out_string
'('
')'
';'
'}'
')'
';'
'}'
')'
';'
OBJECTID avar
ASSIGN
OBJECTID x
';'
'}'
')'
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "j"
THEN
OBJECTID avar
ASSIGN
'('
NEW
ERROR "A"
')'
ELSE
IF
OBJECTID char
ERROR "="
STR_CONST "q"
THEN
OBJECTID flag
ASSIGN
BOOL_CONST false
ELSE
OBJECTID avar
ASSIGN
'('
NEW
ERROR "A"
')'
'.'
OBJECTID method1
'('
OBJECTID avar
'.'
OBJECTID value
'('
')'
')'
FI
FI
FI
FI
FI
FI
FI
FI
FI
FI
';'
'}'
POOL
';'
'}'
'}'
';'
'}'
';'
